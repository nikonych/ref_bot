import asyncio
import json
import random
import secrets
import time

import pyqiwi
from aiogram.types import CallbackQuery
from async_class import AsyncClass
from pyqiwi.exceptions import APIError
from pyqiwip2p import QiwiP2P


async def check_qiwi(call: CallbackQuery):
    settings = open("database/settings.json", "r")
    with settings as read_file:
        data = json.load(read_file)
    try:
        wallet = pyqiwi.Wallet(token=data['payments']['qiwi_token'])
        await call.message.answer("QIWI —É—Å–ø–µ—à–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç!\n"
                                  f"–ù–∞ –±–∞–ª–∞–Ω—Å–µ: {wallet.balance()}‚ÇΩ")
    except APIError:
        await call.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω")


async def auto_withdraw(recipient, amount, call: CallbackQuery):
    settings = open("database/settings.json", "r")
    with settings as read_file:
        data = json.load(read_file)
    try:
        print(recipient, amount)
        wallet = pyqiwi.Wallet(token=data['payments']['qiwi_token'])
        pay = wallet.send(pid='99', recipient=recipient, amount=amount, comment="–°–ø–∞—Å–∏–±–æ —á—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ —Å –Ω–∞–º–∏!")
        print(pay)
        print(pay.transaction['state']['code'])
    except APIError:
        await call.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω! –ò–∑–º–µ–Ω–∏—Ç–µ –≤ –∞–¥–º–∏–Ω–∫–µ")


class QiwiAPI(AsyncClass):
    async def __ainit__(self):
        settings = open("database/settings.json", "r")
        with settings as read_file:
            data = json.load(read_file)
        self.token = data['payments']['qiwi_token']

        self.base_url = "https://edge.qiwi.com/{}/{}/persons/{}/{}"
        self.headers = {"authorization": f"Bearer {self.token}"}

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
    async def bill_pay(self, get_amount):
        receipt = self.get_random_string()
        settings = open("database/settings.json", "r")
        with settings as read_file:
            data = json.load(read_file)
        token = data['payments']['qiwi_secret']
        qiwi = QiwiP2P(token)
        bill = qiwi.bill(bill_id=receipt, amount=get_amount, comment=receipt)
        send_requests = bill.pay_url

        return_message = f"<b>üÜô –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>\n" \
                         f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                         f"ü•ù –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ \n<code>–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ</code> –∏ –æ–ø–ª–∞—Ç–∏—Ç–µ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∞–º —Å—á—ë—Ç\n" \
                         f"‚ùó –£ –≤–∞—Å –∏–º–µ–µ—Ç—Å—è 30 –º–∏–Ω—É—Ç –Ω–∞ –æ–ø–ª–∞—Ç—É —Å—á–µ—Ç–∞.\n" \
                         f"üí∞ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <code>{get_amount}‚ÇΩ</code>\n" \
                         f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                         f"üîÑ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ <code>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É</code>"

        return return_message, send_requests, receipt

    def get_random_string(self):
        return f'{time.time()}_{secrets.token_hex(random.randint(12, 20))}'

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ –ø–æ —Ñ–æ—Ä–º–µ
    async def check_form(self, receipt):
        settings = open("database/settings.json", "r")
        with settings as read_file:
            data = json.load(read_file)
        token = data['payments']['qiwi_secret']
        qiwi_p2p = QiwiP2P(token)
        get_pay = qiwi_p2p.check(bill_id=receipt)

        pay_status = get_pay.status  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞
        pay_amount = int(float(get_pay.amount))  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—É–º–º—ã –ø–ª–∞—Ç–µ–∂–∞ –≤ —Ä—É–±–ª—è—Ö

        return pay_status, pay_amount

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–∞ –ø–æ –ø–µ—Ä–µ–≤–æ–¥—É
