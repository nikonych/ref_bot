import json
import random
import secrets
import time



from aiogram.types import CallbackQuery

from utils.payments.LavaAPI import Payment, LavaAPI


def get_random_string():
    return f'{time.time()}_{secrets.token_hex(random.randint(12, 20))}'


async def bill_pay(get_amount):
    receipt = get_random_string()
    settings = open("database/settings.json", "r")
    with settings as read_file:
        data = json.load(read_file)
    api = LavaAPI(data['payments']['lava_token'])
    print(api.__dict__)
    bill = api.create_invoice(get_amount, receipt)

    return_message = f"<b>üÜô –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞</b>\n" \
                     f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                     f"ü•ù –î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ \n<code>–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ</code> –∏ –æ–ø–ª–∞—Ç–∏—Ç–µ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∞–º —Å—á—ë—Ç\n" \
                     f"‚ùó –£ –≤–∞—Å –∏–º–µ–µ—Ç—Å—è 30 –º–∏–Ω—É—Ç –Ω–∞ –æ–ø–ª–∞—Ç—É —Å—á–µ—Ç–∞.\n" \
                     f"üí∞ –°—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: <code>{get_amount}‚ÇΩ</code>\n" \
                     f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n" \
                     f"üîÑ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ <code>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É</code>"

    return return_message, bill, receipt


async def check_form(payment: Payment):
    return payment.is_paid(), payment.amount


async def check_lava(call: CallbackQuery):
    settings = open("database/settings.json", "r")
    with settings as read_file:
        data = json.load(read_file)
    api = LavaAPI(data['payments']['lava_token'])

    if api.check_key():
        await call.message.answer("LAVA —É—Å–ø–µ—à–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç!\n"
                                  f"–ù–∞ –±–∞–ª–∞–Ω—Å–µ: {api.wallet_balance('RUB')}‚ÇΩ")
        return api.wallet_balance("RUB")
    else:
        await call.answer("–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω")
